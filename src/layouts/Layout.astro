---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Daniel Wilton Portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <script is:inline>
      // This code should be added to <head>.
      // It's used to prevent page load glitches.
      const html = document.querySelector("html");
      const isLightOrAuto =
        localStorage.getItem("hs_theme") === "light" ||
        (localStorage.getItem("hs_theme") === "auto" &&
          !window.matchMedia("(prefers-color-scheme: dark)").matches);
      const isDarkOrAuto =
        localStorage.getItem("hs_theme") === "dark" ||
        (localStorage.getItem("hs_theme") === "auto" &&
          window.matchMedia("(prefers-color-scheme: dark)").matches);

      if (isLightOrAuto && html.classList.contains("dark"))
        html.classList.remove("dark");
      else if (isDarkOrAuto && html.classList.contains("light"))
        html.classList.remove("light");
      else if (isDarkOrAuto && !html.classList.contains("dark"))
        html.classList.add("dark");
      else if (isLightOrAuto && !html.classList.contains("light"))
        html.classList.add("light");
    </script>
  </head>
  <body class="mx-auto h-screen w-full px-0 dark:bg-gray-800" id="background">
    <slot />
  </body>
</html>

<script>
  import { quantum } from "ldrs";
  quantum.register();
</script>

<script>
  import "preline/dist/preline.js";
</script>

<script
  is:inline
  src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r134/three.min.js"
></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/vanta/dist/vanta.net.min.js"
></script>

<script>
  import { isDarkMode } from "../stores/darkModeStore.js";

  const computed_style = window.getComputedStyle(
    document.getElementById("dark-mode-enable")!,
  );

  if (computed_style.display === "none") {
    isDarkMode.set(true);
  }

  isDarkMode.subscribe((darkMode) => {
    if (darkMode) {
      VANTA.NET({
        el: "#background",
        scale: 1.0,
        scaleMobile: 1.0,
        backgroundColor: 0x1f2937,
        color: 0xc083fc,
        points: 10.0,
        maxDistance: 18.0,
        spacing: 16.0,
      });
    } else {
      VANTA.NET({
        el: "#background",
        scale: 1.0,
        scaleMobile: 1.0,
        backgroundColor: 0xffffff,
        color: 0xcba2f5,
        points: 10.0,
        maxDistance: 18.0,
        spacing: 16.0,
      });
    }
  });
</script>
